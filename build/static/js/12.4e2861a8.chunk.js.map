{"version":3,"sources":["components/Video.js"],"names":["Video","props","id","name","data","setData","useState","api","API_MOVIE","API_TV","useEffect","async","axios","get","API_KEY","then","results","catch","error","console","getData","ref","useRef","length","_jsxs","_Fragment","children","_jsx","className","filter","item","type","map","dataTrailer","index","href","key","target","rel","IoPlay","onClick","scrollRight","scrollOffset","current","scrollLeft","scrollWidth","clientWidth","classList","remove","add","FiChevronLeft","FiChevronRight","dataRow","to","YouTube","videoId","title","loading"],"mappings":"wGAAA,2EA6FeA,UAtFAC,IAEb,MAAM,GAAEC,EAAE,KAAEC,GAASF,GACdG,EAAMC,GAAWC,mBAAS,IAEjC,IAAIC,EACJ,OAAQJ,GACN,IAAK,QACHI,EAAMC,IACN,MAEF,IAAK,KACHD,EAAME,IAOVC,qBAAU,KACQC,WACdC,IAAMC,IAAIN,EAAML,EAAK,mBAAqBY,KACvCC,MAAMX,IACLC,EAAQD,EAAKA,KAAKY,YAEnBC,OAAOC,IACNC,QAAQD,MAAMA,OAIpBE,KACC,CAACb,EAAKL,IAET,MAAMmB,EAAMC,iBAAO,MAsBnB,OACElB,EAAKmB,OAAS,GACZC,eAAAC,WAAA,CAAAC,SAAA,CACEC,cAAA,QAAMC,UAAU,eAAcF,SAAEtB,EAAKyB,QAAQC,GAAuB,YAAdA,EAAKC,OAAoBC,KAAI,CAACC,EAAaC,IAAWA,EAAQ,GAAKD,EAAcT,eAAA,KAAGI,UAAU,wCAAoDO,KAAM,mCAAqCF,EAAYG,IAAKC,OAAO,SAASC,IAAI,aAAYZ,SAAA,CAACC,cAACY,IAAM,CAACX,UAAU,cAAc,iBAApIM,GAAuJ,SACxVV,eAAA,OAAKI,UAAU,yBAAwBF,SAAA,CACrCC,cAAA,MAAIC,UAAU,UAASF,SAAC,WACxBF,eAAA,OAAKI,UAAU,uBAAuBP,IAAKA,EAAIK,SAAA,CAC7CC,cAAA,UAAQC,UAAU,gEAAgEY,QAASA,KAAMC,OA3BtFC,EA2BkG,IA1BrHrB,EAAIsB,QAAQC,YAAcF,EACpBrB,EAAIsB,QAAQC,WAAcvB,EAAIsB,QAAQE,YAAyC,KAA1BxB,EAAIsB,QAAQG,aACrEzB,EAAIsB,QAAQjB,SAAS,GAAGqB,UAAUC,OAAO,aAEvC3B,EAAIsB,QAAQC,YAAc,KAC5BvB,EAAIsB,QAAQjB,SAAS,GAAGqB,UAAUE,IAAI,SANrBP,OA2BuGhB,SAACC,cAACuB,IAAa,MACjIvB,cAAA,UAAQC,UAAU,2DAA2DY,QAASA,KAAMI,OAlBlFF,EAkB6F,IAjB/GrB,EAAIsB,QAAQC,YAAcF,EACpBrB,EAAIsB,QAAQC,WAAcvB,EAAIsB,QAAQE,YAAyC,KAA1BxB,EAAIsB,QAAQG,aACrEzB,EAAIsB,QAAQjB,SAAS,GAAGqB,UAAUE,IAAI,aAEpC5B,EAAIsB,QAAQC,YAAc,GAC5BvB,EAAIsB,QAAQjB,SAAS,GAAGqB,UAAUC,OAAO,SANzBN,OAkBkGhB,SAACC,cAACwB,IAAc,MAC3H/C,EAAK4B,KAAI,CAACoB,EAASlB,IAClBP,cAAA,OAAiBC,UAAU,YAAYyB,GAAG,cAAa3B,SACrDC,cAAA,OAAKC,UAAU,OAAMF,SACnBC,cAAA,OAAKC,UAAU,YAAWF,SACxBF,eAAA,OAAKI,UAAU,qBAAoBF,SAAA,CACjCC,cAAC2B,IAAO,CACNC,QAASH,EAAQhB,IACjBoB,MAAOJ,EAAQjD,KAAOiD,EAAQjD,KAAOiD,EAAQI,MAC7CC,QAAQ,SAEV9B,cAAA,OAAKC,UAAU,kBAAiBF,SAAE0B,EAAQjD,KAAOiD,EAAQjD,KAAOiD,EAAQI,cARnDtB,IADnBA","file":"static/js/12.4e2861a8.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { API_MOVIE, API_TV, API_KEY } from '../constant';\r\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi';\r\nimport { IoPlay } from 'react-icons/io5';\r\nimport axios from 'axios';\r\nimport YouTube from 'react-youtube';\r\n\r\nconst Video = (props) => {\r\n\r\n  const { id, name } = props;\r\n  const [data, setData] = useState([]);\r\n\r\n  let api;\r\n  switch (name) {\r\n    case 'movie':\r\n      api = API_MOVIE;\r\n      break;\r\n\r\n    case 'tv':\r\n      api = API_TV;\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      axios.get(api + id + '/videos?api_key=' + API_KEY)\r\n        .then((data) => {\r\n          setData(data.data.results);\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n        })\r\n    }\r\n\r\n    getData();\r\n  }, [api, id]);\r\n\r\n  const ref = useRef(null);\r\n\r\n  const scrollRight = (scrollOffset) => {\r\n    ref.current.scrollLeft -= scrollOffset;\r\n    if (!(ref.current.scrollLeft < (ref.current.scrollWidth - (ref.current.clientWidth * 1.25)))) {\r\n      ref.current.children[1].classList.remove('hide');\r\n    }\r\n    if (ref.current.scrollLeft <= 500) {\r\n      ref.current.children[0].classList.add('hide');\r\n    }\r\n  };\r\n\r\n  const scrollLeft = (scrollOffset) => {\r\n    ref.current.scrollLeft += scrollOffset;\r\n    if (!(ref.current.scrollLeft < (ref.current.scrollWidth - (ref.current.clientWidth * 1.25)))) {\r\n      ref.current.children[1].classList.add('hide');\r\n    }\r\n    if (ref.current.scrollLeft >= 0) {\r\n      ref.current.children[0].classList.remove('hide');\r\n    }\r\n  };\r\n\r\n  return (\r\n    data.length > 0 &&\r\n      <>\r\n        <span className='align-middle'>{data.filter((item) => item.type === \"Trailer\").map((dataTrailer, index) => (index < 1 && dataTrailer ? <a className='aLink btn btn-primary text-light mt-3' key={index} href={\"https://www.youtube.com/watch?v=\" + dataTrailer.key} target=\"_blank\" rel=\"noreferrer\"><IoPlay className='me-2 mb-1' />Play trailer</a> : null))}</span>\r\n        <div className=\"mt-5 position-relative\">\r\n          <h2 className='fw-bold'>VIDEOS</h2>\r\n          <div className=\"d-flex flex-row mt-3\" ref={ref}>\r\n            <button className=\"btn btn-outline-primary position-absolute scroll-button1 hide\" onClick={() => scrollRight(500)}><FiChevronLeft /></button>\r\n            <button className=\"btn btn-outline-primary position-absolute scroll-button2\" onClick={() => scrollLeft(500)}><FiChevronRight /></button>\r\n            {data.map((dataRow, index) => (\r\n              <div key={index} className=\"card-link\" to='/movieshub/'>\r\n                <div className=\"card\" key={index}>\r\n                  <div className=\"card-body\">\r\n                    <div className=\"card-text w-iframe\">\r\n                      <YouTube\r\n                        videoId={dataRow.key}\r\n                        title={dataRow.name ? dataRow.name : dataRow.title}\r\n                        loading=\"lazy\"\r\n                      />\r\n                      <div className='text-break mt-1'>{dataRow.name ? dataRow.name : dataRow.title}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Video\r\n"],"sourceRoot":""}